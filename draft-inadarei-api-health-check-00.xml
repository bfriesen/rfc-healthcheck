<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Health Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>114 5th Avenue</street>
          <city>New York</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a service health check response format for HTTP APIs.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="strong">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/">https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Vast majority of modern APIs, that drive data to web and mobile applications use
HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these APIs
determine availability of the applications themselves. In distributed systems
built with a number of APIs, understanding the health status of the APIs and
making corresponding decisions, for failover or circuit-breaking, are essential
for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a single mandatory root field and several optional
fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used.  <vspace blankLines='1'/>
In case of “warn” status, additional information SHOULD be provided, utilizing
optional fields of the response.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
  <t>memory: (optional) array of sizes for the  currently utilized resident memory
(in kilobytes) on each of the logical nodes backing the service. Logical node
can be a physical server, VM, a container or any other logical unit that makes
sense for service publisher.</t>
  <t>cpu: (optional) array of cpu utiliation percentage on each of the logical
nodes backing the service. Logical node can be a physical server, VM, a
container or any other logical unit that makes sense for service publisher.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>connections: (optional) current number of active connections</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional information
regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "serviceID": "service:authz",
    "description": "health of authz service",
    "status": "pass",
    "memory": [4096, 1024, 3456],
    "cpu": [20, 40, 50],
    "uptime": "1209600",
    "connections" : 25,
    "notes": [""],
    "output": "",
    "details": [
      {
        "id": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "name": "sub-component-X",
        "value": "12313",
        "status": "pass",
        "output": ""
      },
      {
        "id": "3c1f048c-a4be-4aa2-83e6-2629073d19dc",
        "name": "Cassandra test query duration in ms",
        "value": "250",
        "status": "warn",
        "output": "Response time over target of less than 100ms"
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="another-subtitle" title="Another subtitle">

<t>TODO</t>

</section>
<section anchor="final-subtitle" title="Final subtitle">

<t>TODO</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json is being submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

