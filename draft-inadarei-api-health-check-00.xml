<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "./Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Healtch Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “health check response” format for API HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/">https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Vast majority of modern APIs, that drive data to web and mobile applications use
HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these APIs
determine availability of the applications themselves. In distributed systems
built with a number of APIs, understanding the health status of the APIs and
making corresponding decisions, for failover or circuit-breaking, are essential
for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a single mandatory root field and several optional
fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used.  <vspace blankLines='1'/>
In case of “warn” status, additional information SHOULD be provided, utilizing
optional fields of the response.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
  <t>memory: (optional) array of sizes for the  currently utilized resident memory
(in kilobytes) on each of the logical nodes backing the service. Logical node
can be a physical server, VM, a container or any other logical unit that makes
sense for service publisher.</t>
  <t>cpu: (optional) array of cpu utiliation percentage on each of the logical
nodes backing the service. Logical node can be a physical server, VM, a
container or any other logical unit that makes sense for service publisher.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional information
regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "serviceID": "service:authz",
    "description": "health of authz service",
    "status": "pass",
    "memory": [4096, 1024, 3456],
    "cpu": [20, 40, 50],
    "uptime": "1209600",
    "notes": [""],
    "output": "",
    "details": [
      {
        "id": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "name": "sub-component-X",
        "status": "pass",
        "value": "12313",
        "output": ""
      },
      {
        "id": "3c1f048c-a4be-4aa2-83e6-2629073d19dc",
        "name": "sub-component-Y",
        "status": "warn",
        "value": "0920394",
        "output": "Close to capacity"
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="another-subtitle" title="Another subtitle">

<t>Lorem Ipsum</t>

</section>
<section anchor="final-subtitle" title="Final subtitle">

<t>Lorem ipsum</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json will be submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5226" target='https://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-not-use-insert-other-health-check-format" title="Why not use (insert other health check format)?">

<t>There are a fair number of existing health check formats. However, these formats
have generally been optimised for particular use-cases, and less capable of
fitting into general scenarios, optimized for interoperability.</t>

</section>
<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Implementing them would add considerable complexity and the associated
potential for errors (both in the specification and by its users). For the sake
of interoperability and ease of implementation this specification doesn’t
attempt to create the most powerful format possible.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
FEkkAAA=

-->

</rfc>

