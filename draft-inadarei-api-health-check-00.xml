<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Health Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>114 5th Avenue</street>
          <city>New York</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a service health check response format for HTTP APIs.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="strong">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-health-check/">https://datatracker.ietf.org/doc/draft-inadarei-api-health-check/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The vast majority of modern APIs driving data to web and mobile applications
use HTTP <xref target="RFC7230"/> as their protocol. The health and uptime of these
APIs determine availability of the applications themselves. In distributed
systems built with a number of APIs, understanding the health status of the APIs
and making corresponding decisions, for failover or circuit-breaking, are
essential for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC8259"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in JSON <xref target="RFC8259"/> and has the media type
“application/vnd.health+json”.</t>

<t>Its content consists of a single mandatory root field (“status”) and several
optional fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 5xx range MUST be
used. In case of the “warn” status, additional information SHOULD be provided,
utilizing optional fields of the response.</t>
  <t>version: (optional) public version of the service.</t>
  <t>releaseID: (optional) in well-designed APIs, backwards-compatible changes in
the service should not update a version number. APIs usually change their
version number as infrequently as possible, to preserve stable interface.
However implementation of an API may change much more frequently, which leads
to the importance of having separate “release number” or “releaseID” that is
different from the public version of the API.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional
information regarding the various sub-components of the service.  A details
object SHOULD be a health check response object.</t>
  <t>links: (optional) an array of objects containing link relations and URIs
<xref target="RFC3986"/> for external links that MAY contain more information about the
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.  If a “self” link is provided, it MAY be used by clients to
check health via HTTP response code, as mentioned above.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
  <t>componentId: (optional) unique identifier of an instance of a specific
sub-component/dependency of a service. Multiple objects with the same
componentId MAY appear in the details, if they are from different nodes.</t>
  <t>componentName: (optional) human-readable name for the component.</t>
  <t>componentType: (optional) SHOULD be present if componentName is present. Type
of the component. Could be one of:
  <list style="symbols">
      <t>Pre-defined value from this spec. Pre-defined values include:
      <list style="symbols">
          <t>component</t>
          <t>datastore</t>
          <t>system</t>
        </list></t>
      <t>A common and standard term from a well-known source such as schema.org, IANA
or microformats.</t>
      <t>A URI that indicates extra semantics and processing rules that MAY be
provided by a resource at the other end of the URI. URIs do not have to be
dereferenceable, however. They are just a namespace, and the meaning of a
namespace CAN be provided by any convenient means (e.g. publishing an RFC,
Swagger document or a nicely printed book).</t>
    </list></t>
  <t>metricName: (optional) Could be one of:
  <list style="symbols">
      <t>Pre-defined value from this spec. Pre-defined values include:
      <list style="symbols">
          <t>utilization</t>
          <t>responseTime</t>
          <t>connections</t>
        </list></t>
      <t>A common and standard term from a well-known source such as schema.org, IANA
or microformats.</t>
      <t>A URI that indicates extra semantics and processing rules that MAY be
provided by a resource at the other end of the URI. URIs do not have to be
dereferenceable, however. They are just a namespace, and the meaning of a
namespace CAN be provided by any convenient means (e.g. publishing an RFC,
Swagger document or a nicely printed book).</t>
    </list></t>
  <t>metricValue: (optional) could be any valid JSON value, such as: string, number,
object, array or literal.</t>
  <t>metricUnit: (optional) SHOULD be present if metricValue is present. Could be
one of:
  <list style="symbols">
      <t>A common and standard term from a well-known source such as schema.org, IANA,
microformats, or a standards document such as <xref target="RFC3339"/>.</t>
      <t>A URI that indicates extra semantics and processing rules that MAY be
provided by a resource at the other end of the URI. URIs do not have to be
dereferenceable, however. They are just a namespace, and the meaning of a
namespace CAN be provided by any convenient means (e.g. publishing an RFC,
Swagger document or a nicely printed book).</t>
    </list></t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "status": "pass",
    "version" : "1",
    "releaseID" : "1.2.2",
    "uptime": "1209600.245",
    "connections" : 25,
    "notes": [""],
    "output": "",
    "details": [
      {
        "componentId": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "componentName": "Cassandra",
        "componentType" : "datastore",
        "metricName" : "responseTime",
        "metricValue": 250,
        "metricUnit" : "milliseconds",
        "status": "pass",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "componentName": "Cassandra",
        "type" : "datastore",
        "metricName" : "connections",
        "metricValue": 75,
        "status": "warn",
        "time" : "2018-01-17T03:36:48Z",
        "output": "",
        "links": [
          {
            "rel": "self",
            "uri": "http://api.example.com/dbnode/dfd6cf2b/health"
          }
        ]
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "componentName": "cpu",
        "type" : "system",
        "metricName" : "utilization",
        "metricValue": 85,
        "metricUnit" : "percent",
        "status": "warn",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "componentName": "cpu",
        "type" : "system",
        "metricName" : "utilization",
        "metricValue": 85,
        "metricUnit" : "percent",
        "status": "warn",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "componentName": "memory",
        "type" : "system",
        "node" : 1,
        "metricName" : "utilization",
        "metricValue": 8.5,
        "metricUnit" : "GiB",
        "status": "warn",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "componentName": "memory",
        "node" : 2,
        "type" : "system",
        "metricName" : "utilization",
        "metricValue": 5500,
        "metricUnit" : "MiB",
        "status": "pass",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ],
    "serviceID": "f03e522f-1f44-4062-9b55-9587f91c9c41",
    "description": "health of authz service"
  }
]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json is being submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC3339" target='https://www.rfc-editor.org/info/rfc3339'>
<front>
<title>Date and Time on the Internet: Timestamps</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='C.' surname='Newman' fullname='C. Newman'><organization /></author>
<date year='2002' month='July' />
</front>
<seriesInfo name='RFC' value='3339'/>
<seriesInfo name='DOI' value='10.17487/RFC3339'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged to obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIANEbYFoAA+1abXPbOJL+zl+BUj5ckhNlSX7XvdR5nWTi3djO2c5t7W1N
TUEkKGFMETqAlKKZ8vz2fboBUJRjZ2ZrZ+/qtiYfYooEGo3up1+BNE2TWtel
moj3Spb1XJzPVXYvbpRbmsop8c7YhaxFYax4f3f3UZx9vHCJnE6tWk2S3GSV
XGBubmVRp7qSubRKp3Kp0zmTSzMilw6HSS5rDBwPRydJhseZsZuJ0FVhkkQv
7UTUtnH1eDg8HY4TEJET8Y2qlJVlsjb2fmZNs5wk92qDX/lEXFS1spWq0ze0
cpK4Wlb5d7I0FRbZKJcs9UT8uTZZX+A/XeWqqvvCGVtbVTg8bRbhobY6w6fM
LJYyPCwwGJ90VepKfZsksqnnxk4SkSYC/3TlwMBAXPnduvlKl5q/eGFcWHlf
6ic+Yy2l6okYjQ7EIUR9tlJVo/hTpmuI40qtxZ+wW//KNFVNQvpU6Vrl4raG
2Bx/UgupS0iPF/qPGf0agG/+1ljsfF7Xy8ne3nq9HhRWufm0bOzU8ZikYo3q
lcKGxM278/FodBoe909PjujxBZ4Px+Oj8Prw9OQkPB6P9w/C48n4EPMSUuEu
QYwZhsejk/3OzFFcZn+fZqZpKuQUQoHck+Rurp0AoBqSvlhaszROOSGFU3al
MyU8oAQDStiIz+IJfA487crU6rsr+q82390omSvrkuT1a3Ag3r65uLu+mYhl
qSSoWLUwKyVq4sGprNamElMFokosm2mpgVi8ev2a2FRCO9eAtVI7vzBPYxMQ
maSJeNtUuQBf/0qacFDFTNfzZkoa2ItmsmeLLJgJb2rP0/33gV9lYUDeqozE
4YljlS7JSGcQaGvzBUWideNJZHNZzUig2BNxrv56/sg0dO32FhLTLdG+VUrI
0hmIQHkm/8mJrLGWVoRN1o2DufDXi7d37wScgCR93yvbx/JJu3znw0CruhgY
O9sDGvZ+xrPwDknZC53npUqSF+QarMkbVqKX5Ar8ioX83lhYmTAFRAssVIwV
cK1Xupoxa/AVYq2mAr4EY6a6xO6Wy6h+lzSACqPsxx8Dzh8ehHS0P20Js/A1
phwIWjTAlUg1y1ovFC2MgU4lfl0FGS7gYIRcwX4lVgvckbS6y9KLhVPlSrkB
didyTU5r2kCFidtAFQsnpo0ua7HWtKKomsVUWSJFK/UFsAjok4ekjdZb5oKG
wpretdPW5T0NzIz1ZsbTcpVpR+z0GfMFeIbJYBUL52WzRtcpggLP7BPIEuUc
UKBlyeMhnJVmQnM9m5ebuGuI2Jmy4Y164AOf6jO2SLa/1jmpzwISLBqzRESg
saDqTFGvCc31XJKhlBroNh5sQZoJ9Ame8md8RxAQ68uSWUfogr3KCJaYtHmw
cZXsUDFNvWzqllhfzM1arQjXMAe23R0dKqgG0gKbm8BkMpVOZ6LEpJJYaR0p
PusqK5scJgrjYcAFTWUArmvRNwL6wBpQmdTS3aduCR0VoOkJkTw/OTnzyNsZ
gFkd7rbvbZgpMogN0UY4Pavoi6zqBB6kLBU5kT5hED/MmhQqq41YKFnhuWhK
sAxgm6WFpgKmZWaNA+J1USgSb6IX8Lvk54NwCHRTVa+VqrajYIwGAXhGbiZo
Qv/A63Wdflcnjt2vR5pitrDxjjkkU2QUhfaxnQQMaohDr8W7EogjKOZqWZoN
R6AUe68QdrqQCxwxv0COyIC5qvbLBs0iwiGhmJPRaWIz8NonjW9ieHCyoNHw
p1M4gJzpuQahUNcNO2YnKqWg/wFx93ZlylWUJcIakgRv15lhyLBRexccIdvn
lcIyWFAHnwiPQfkLy0ZVK21NxZslBlRmvDfxBsVuPazgWvpIcLaLgBZ5HFgC
Brqad4TsDM6aQUxEgaGa+LPqfxptWefezLvBPodSKo71va46e1HPjYt+6/e3
11fxLVsBJSEPDwkhgb0q+CQnLTlxiPa7NNh/tOKImK65sW4M4W6QvJcrD7K1
KsvUs5Z3EcfRftlYyk8IbAtDhjIzBgtRKkO5ChZOtvB9IZCFRAydm2pFfpHi
CUcn5LSCklonepefbu96ff9XXF3z883b//x0cfP2DT3fvj/78KF9iCNu319/
+oDvSXjazjy/vrx8e/XGT748+xP+kFJ61x/vLq6vzj70fHDu6oIdqgFmErZj
mHEAJBxPhqjjfRLLnhLHhwfeHxlDqB9i5ZAkZ9VT72NF8dLYvvcVPjNBKNj0
dwHQOtfeKwq9HAijJnbYYVh08MC7nPvADNeUa0T2zVIlvY7T21tV+cCv9s/f
O1P1sJELsmUDnihfwsIchdiHEALhHxaEqBqli7DGAA5albl42fPeuffKGzJF
AZQtZhk0zqMcOxo/cCJeBnvIX4H9nDjC7tZzxTGCDS0kvTGHAp6zTC1rDpgA
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

-->

</rfc>

