<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Health Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>114 5th Avenue</street>
          <city>New York</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a service health check response format for HTTP APIs.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="strong">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-health-check/">https://datatracker.ietf.org/doc/draft-inadarei-api-health-check/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The vast majority of modern APIs driving data to web and mobile applications
use HTTP <xref target="RFC7230"/> as their protocol. The health and uptime of these
APIs determine availability of the applications themselves. In distributed
systems built with a number of APIs, understanding the health status of the APIs
and making corresponding decisions, for failover or circuit-breaking, are
essential for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC8259"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC8259"/> and has the media type
“application/vnd.health+json”.</t>

<t>Its content consists of a single mandatory root field (“status”) and several
optional fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used. In case of the “warn” status, additional information SHOULD be provided,
utilizing optional fields of the response.</t>
  <t>version: (optional) public version of the service.</t>
  <t>release_id: (optional) in well-designed APIs, backwards-compatible changes in
the service should not update a version number. APIs usually change their
version number as infrequently as possible, to preserve stable interface.
However implementation of an API may change much more frequently, which leads
to the importance of having separate “release number” or “release_id” that is
different from the public version of the API.</t>
  <t>memory: (optional) array of sizes for the  currently utilized resident memory
(in kilobytes) on each of the logical nodes backing the service. Logical node
can be a physical server, VM, a container or any other logical unit that makes
sense for service publisher.</t>
  <t>cpu: (optional) array of cpu utiliation percentage on each of the logical
nodes backing the service. Logical node can be a physical server, VM, a
container or any other logical unit that makes sense for service publisher.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>connections: (optional) current number of active connections</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional information
regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "status": "pass",
    "version" : "1",
    "release_id" : "1.2.2",
    "memory": [4096, 1024, 3456],
    "cpu": [20, 40, 50],
    "uptime": "1209600.245",
    "connections" : 25,
    "notes": [""],
    "output": "",
    "details": [
      {
        "id": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "name": "sub-component-X",
        "value": "12313",
        "status": "pass",
        "output": ""
      },
      {
        "id": "3c1f048c-a4be-4aa2-83e6-2629073d19dc",
        "name": "Cassandra test query duration in ms",
        "value": "250",
        "status": "warn",
        "output": "Response time over target of less than 100ms"
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ],
    "serviceID": "f03e522f-1f44-4062-9b55-9587f91c9c41",
    "description": "health of authz service"
  }
]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json is being submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged to obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

