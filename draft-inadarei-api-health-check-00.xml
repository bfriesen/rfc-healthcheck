<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Health Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>114 5th Avenue</street>
          <city>New York</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a service health check response format for HTTP APIs.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="strong">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-health-check/">https://datatracker.ietf.org/doc/draft-inadarei-api-health-check/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The vast majority of modern APIs driving data to web and mobile applications
use HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these
APIs determine availability of the applications themselves. In distributed
systems built with a number of APIs, understanding the health status of the APIs
and making corresponding decisions, for failover or circuit-breaking, are
essential for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a single mandatory root field (“status”) and several
optional fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used. In case of the “warn” status, additional information SHOULD be provided,
utilizing optional fields of the response.</t>
  <t>version: (optional) public version of the service.</t>
  <t>release_id: (optional) in well-designed APIs, backwards-compatible changes in
the service should not update a version number. APIs usually change their
version number as infrequently as possible, to preserve stable interface.
However implementation of an API may change much more frequently, which leads
to the importance of having separate “release number” or “release_id” that is
different from the public version of the API.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>connections: (optional) current number of active connections</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional
information regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "status": "pass",
    "version" : "1",
    "release_id" : "1.2.2",
    "uptime": "1209600.245",
    "connections" : 25,
    "notes": [""],
    "output": "",
    "details": [
      {
        "componentId": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "componentName": "Cassandra",
        "componentType" : "datastore",
        "metricName" : "response",
        "metricValue": 250,
        "metricUnit" : "milliseconds",
        "status": "pass",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "componentName": "Cassandra",
        "type" : "datastore",
        "metricName" : "connections",
        "metricValue": 75,
        "status": "warn",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "componentName": "cpu",
        "type" : "system",
        "metricName" : "utilization",
        "metricValue": 85,
        "metricUnit" : "percent",
        "status": "warn",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "componentName": "cpu",
        "type" : "system",
        "metricName" : "utilization",
        "metricValue": 85,
        "metricUnit" : "percent",
        "status": "warn",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "componentName": "memory",
        "type" : "system",
        "node" : 1,
        "metricName" : "utilization",
        "metricValue": 8.5,
        "metricUnit" : "gb",
        "status": "warn",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "componentName": "memory",
        "node" : 2,
        "type" : "system",
        "metricName" : "utilization",
        "metricValue": 5500,
        "metricUnit" : "mb",
        "status": "pass",
        "time" : "2018-01-17T03:36:48Z",
        "output": ""
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ],
    "serviceID": "f03e522f-1f44-4062-9b55-9587f91c9c41",
    "description": "health of authz service"
  }
]]></artwork></figure>

</section>
<section anchor="details-object" title="Details Object">

<t>Following fields and rules SHOULD be used for the details objects of the reponse.</t>

<t><list style="symbols">
  <t>componentId: (required) unique identifier of an instance of a specific
sub-component/dependency of a service. Multiple objects with the same
componentId MAY appear in the details, if they are from different nodes.</t>
  <t>componentName: (optional) human-readable name for the component.</t>
  <t>componentType: (optional) type of the component. Could be one of:
  <list style="symbols">
      <t>Pre-defined value from this spec. Pre-defined values include:
      <list style="symbols">
          <t>component</t>
          <t>datastore</t>
          <t>system</t>
        </list></t>
      <t>A common and standard term from IANA or microformats</t>
      <t>A URI that indicates extra semantics and processing rules that MAY be
provided by a resource at the other end of the URI. URIs do not have to be
dereferenceable, however. They are just a namespace, and the meaning of a
namespace CAN be provided by any convenient means (e.g. publishing an RFC,
Swagger document or a nicely printed book).</t>
    </list></t>
  <t>metricName:</t>
  <t>metricValue:</t>
  <t>metricUnit:</t>
  <t>status:</t>
  <t>output:</t>
</list></t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json is being submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>


  </back>

<!-- ##markdown-source:
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
Lc1OtK3TxqQ5T2X+EwSmZjWOLAAA

-->

</rfc>

