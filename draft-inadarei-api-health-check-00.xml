<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Healtch Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>114 5th Avenue</street>
          <city>New York</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “health check response” format for API HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="strong">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/">https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Vast majority of modern APIs, that drive data to web and mobile applications use
HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these APIs
determine availability of the applications themselves. In distributed systems
built with a number of APIs, understanding the health status of the APIs and
making corresponding decisions, for failover or circuit-breaking, are essential
for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a single mandatory root field and several optional
fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used.  <vspace blankLines='1'/>
In case of “warn” status, additional information SHOULD be provided, utilizing
optional fields of the response.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
  <t>memory: (optional) array of sizes for the  currently utilized resident memory
(in kilobytes) on each of the logical nodes backing the service. Logical node
can be a physical server, VM, a container or any other logical unit that makes
sense for service publisher.</t>
  <t>cpu: (optional) array of cpu utiliation percentage on each of the logical
nodes backing the service. Logical node can be a physical server, VM, a
container or any other logical unit that makes sense for service publisher.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional information
regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "serviceID": "service:authz",
    "description": "health of authz service",
    "status": "pass",
    "memory": [4096, 1024, 3456],
    "cpu": [20, 40, 50],
    "uptime": "1209600",
    "notes": [""],
    "output": "",
    "details": [
      {
        "id": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "name": "sub-component-X",
        "status": "pass",
        "value": "12313",
        "output": ""
      },
      {
        "id": "3c1f048c-a4be-4aa2-83e6-2629073d19dc",
        "name": "sub-component-Y",
        "status": "warn",
        "value": "0920394",
        "output": "Close to capacity"
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="another-subtitle" title="Another subtitle">

<t>TODO</t>

</section>
<section anchor="final-subtitle" title="Final subtitle">

<t>TODO</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json is being submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>


  </back>

<!-- ##markdown-source:
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
Y5qTaFvHjYkz7k7/D4K192nxIQAA

-->

</rfc>

