<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "./Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Healtch Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>5th Avenue</street>
          <city>New York</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “health check response” format for API HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/">https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Vast majority of modern APIs, that drive data to web and mobile applications use
HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these APIs
determine availability of the applications themselves. In distributed systems
built with a number of APIs, understanding the health status of the APIs and
making corresponding decisions, for failover or circuit-breaking, are essential
for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a single mandatory root field and several optional
fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used.  <vspace blankLines='1'/>
In case of “warn” status, additional information SHOULD be provided, utilizing
optional fields of the response.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
  <t>memory: (optional) array of sizes for the  currently utilized resident memory
(in kilobytes) on each of the logical nodes backing the service. Logical node
can be a physical server, VM, a container or any other logical unit that makes
sense for service publisher.</t>
  <t>cpu: (optional) array of cpu utiliation percentage on each of the logical
nodes backing the service. Logical node can be a physical server, VM, a
container or any other logical unit that makes sense for service publisher.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional information
regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "serviceID": "service:authz",
    "description": "health of authz service",
    "status": "pass",
    "memory": [4096, 1024, 3456],
    "cpu": [20, 40, 50],
    "uptime": "1209600",
    "notes": [""],
    "output": "",
    "details": [
      {
        "id": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "name": "sub-component-X",
        "status": "pass",
        "value": "12313",
        "output": ""
      },
      {
        "id": "3c1f048c-a4be-4aa2-83e6-2629073d19dc",
        "name": "sub-component-Y",
        "status": "warn",
        "value": "0920394",
        "output": "Close to capacity"
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="another-subtitle" title="Another subtitle">

<t>Lorem Ipsum</t>

</section>
<section anchor="final-subtitle" title="Final subtitle">

<t>Lorem ipsum</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json will be submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5226" target='https://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-not-use-insert-other-health-check-format" title="Why not use (insert other health check format)?">

<t>There are a fair number of existing health check formats. However, these formats
have generally been optimised for particular use-cases, and less capable of
fitting into general scenarios, optimized for interoperability.</t>

</section>
<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Implementing them would add considerable complexity and the associated
potential for errors (both in the specification and by its users). For the sake
of interoperability and ease of implementation this specification doesn’t
attempt to create the most powerful format possible.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAMFyXFoAA5VabXPbuBH+jl+B0X2ok4qyLDuOrb66TtK4jeOr7fR60+nc
gCQk4kwSLEBK0XV8v73PLkCJSpxLe5OLaRJY7Ps+u0iSJKI1bann8q1WZZsV
8rLQ2YO81b6xtdfyjXWVauXCOvn2/v5befHtlRcqTZ1ezUVus1pV2Jw7tWgT
U6tcOW0S1ZikIHpFkhG5ZDoVuWqxcDY9OhMZHpfWbebS1AsrhGncXLau8+1s
Oj2fzgSIqLn8s661U6VYW/ewdLZr5uJBb/BbPpdXdatdrdvkFZ0shG9Vnf+g
SlvjkI32ojFz+c/WZmOJv0yd67odS29d6/TC42lTxYfWmQyfMls1Kj5UWIxP
pi5Nrf8lhOrawrq5kImQ+M/UHgxM5PsgrS9WpjT8JSjjyqmH0jzxGWdp3c7l
i7aQFytdd5pfZ6aFKt7rtfwekoZXtqtbUtCH2rQ6l3ctVOb5k66UKaE5PuSP
S/ptAp75W+cgddG2zfzwcL1eTxZO+yItO5d6WnMoRM3mNCsNaeTtm8vZ0dF5
fDw+PzuNjy9ms+3j+dlZfHx59KJf+3J2fDKH4WC+fXr4MI2Pp2fHZ7u3R1ie
JIlUKbQARQtxXxgv4UEdqVs2zjbWay+VHAXXkew60kVPHMnFzhXhhcEds9KQ
sSaBeG1b/cN7+qu1P9xqlWvnhXgODuTrV1f3N7dz2ZRawa2druxKy5Z48Dpr
ja1lqkFay6ZLSwMXxavnxKWWxvsOnJXGh9N5F7u8zBTtw9uuziWY+y1p30P9
S9MWXcpa78Pi0C2yGBYs2mGg+/tJOKWyIO90RtoIxHHKkGRPZxJpG/sZRaJ1
G0hkhaqXpE+IRJzr/58/CgXT+sNKYbsj2ndaS1V6CxXowOSvvMw65+hExGDb
eYQHf716ff9GIugVmftBuzGOF9vjBx8mRreLiXXLQzjD4RczyU5AsnRl8rzU
QnxDmcDZvGMTCvF3sCor9aN1CCppF9AqnKDmtIVUUCjSLdyVOUNqkGudSqQO
rEtNCeGapje+l53Xgr3sP/+Jrv34KBW5KFiv4ZaO/RYJxpYTSTaMnksEu6Y1
lSYWoA14HCfOXEORFbKKVCsErsKZkU9S2d7heFF5Xa60n0BGmRvKVGlHdvQb
2KPyIu1M2cq1oRNl3VWpdkQqyAqHhPdTWjT1kslH5qKZ4pm0mPgVlXqghZl1
IeJ4W64z44mdMTv+AjwjbHCKQ9ZyWWfaBJWAd47Z07T3cAWDrE3roZyVYUKF
WRblppcaiva27FjQ4P209SNEJOWuTa7lSjn4BavGNigDtFaV2LZo13QQm9Jp
hD9ECR4XtSlgVfCUyyfTSK8gtpej2O79F+zVVrLGlMtjoGuxR8V2bdO1W2Jj
Wdi1XpFzIyY4gPdsqGEaaAtsbiKTIlXeZLLEppJY2WZQfDZ1VnY57IsIYreL
lsrgwn7rg0fwQbBGvtkq/5D4BjZagGYgRPr84NUyeN7eAuwacLd77+JOmUFt
KDPSm2VNX1TdCqSRstSUScbkg/jFrsmgqt7ISqsaz4uuBMtwbNs4WCr6tMqc
9UiTZrHQpF5hKuReyvVRORQkqW7XWte7VQhJi6q7pFwTLWF+4vOG6X9oE885
OHiaZrYg+CAcRAoYsTChoJOCQQ216Ll8U8LjyBVz3ZR2w1Uogex1pvdcLnLE
/FLdiSWHj42WRZUDiigo6AyxGXmlhKM3fY3wakGrkVRTJICc6fkO5dC0HNVI
LLXWsP+EuHu9suWq1yUqG9BBiOvMsstwUIc83LvsmE+Kx+BAEzOjzgWBFtaN
rlfG2ZqFJQZ0ZkM2CQHFuT2e4Lf0gWp2h4AWZRxEAhb6liUCJEPGZicmovCh
lvhz+t+dcWzzEObDgp/DKPXn9X5b5jvf562/3N2879+GKAAQeXwUEQgwnwiH
kJm38dtYyN9Hce8xw3Bj21jyu4l4q1bByda6LJPAWj70OC75TecIo5CzVZYC
ZWktDiI4YzLNWXTnvuKbbySgSO9Fl7ZeUWaE54dyDygrCct6Obr+cHc/Goef
8v0NP9++/tuHq9vXr+j57u3Fu3fbh37F3dubD+/wXcSn3c7Lm+vr1+9fhc3X
F9/jB5lldPPt/dXN+4t3o1Cjh9bglGrhNYIjGYEcXRKpJ0PdCVmJtU+Q8fGR
JQw4LKi27xiEuKifet93EgfWjUO6CAgF1WAz/hLmeyY6woRkwWiMz/kJ3sAS
FiqsrXRuUKQ3jRajQco7XNX5JBz06x+9rUcUac8JL86DOnb7qC4ATUo4giqD
+tamLCOq6qEifx0CxslzQMYrSg4WEhIKgxhc1jgpkUsj4VTkoi0aIOksn6HL
mA6oloCibYLXCP7kOV2FYjCXBzGq8mfQQE7nQkHrQnOl4XDVbkXu2MMxREWW
6ablsgtXhlgTBDGZiDn32Ohl9CGKo4Xtk/xKlQR8+yBibuYSm/EnkaNGeT+a
x9iCEcNbAgl429Xb9xQY/AmVux5uYOjiLdIL9JQBp6EsB+pwlkg/uC7vjCKB
Iy6P25JOBbKHnbOPH3HSMf52bCmKKdBDOsTGfMKyBBZ7BX2Z1gnTerFHi0JE
BloCD0BmmQqoYo9HCJ3nJsb+MOtEPae6L1lI2wBCJVc5EOxNH5S9hWk9f1wb
ooWvXsEb+vXPqPb8uwPv1OqiegcsOHCIcS/WICJwoM9Q7CagGiKLye3RLTr4
a7IAHKtzZPvBsk8OICIV+irqWwf7lXOKi7I3Pw2caQC7gvwIaUjJ7Ecy4O4A
PD8AdKYbuPkzAlFaZUV/cGmXEKSESxNCStFO9DWjZ0m+GywBvViLlWyKjecP
tJIA3N+vYTOOW4XkzxCXwQTHVX8QdNyGSgm4zA054C6HjNvG3TaoSB9Z0z2t
DHwIcge3AN6gro1x25My4qj/UcqvyUha+L+k/JqModPZE7NvCWMTBCOiyUZP
4SO+YsEU97uIF9eCCvXu/mld8SfCWnqlGCLutZwcfCGlgExA6Ht0nFpL7RzY
Dx85ELZRG3IBZYVd/GpuDwzZNyTnXdRadMRtwAZ9guIdIYKg1fITIeqdHDb9
UWdUC+JXuP6uQ3o6XxCy1EtCwdHk1BdZZC0gx4RmVrZmMPp5JAKGPHydlegJ
RJ02kJIH8PzDLdAVWOA6S/Mh1FkSXH+k6Rs45UOCqwBn9NTQCVFnNch6KiW8
SByCWiz1kWVkFYZqE/ktXBDteEJEiaEeysXehyZRVOc/YbQwDWhGA8WGi72f
pheo+VAfTT9QMBFZXAAZGofKmQfQCDlpToj21BoqVTTHA85X8HCqSOINy6yo
gUEt/vnnn7Hmz6/v5WEUhUrI4dHkCK/fAhPP+8U01aBSy/V3Ln8BilAt6anI
2XQqb/6KN5cBRST3QCS/vB1rkTN0QjucLeeI3I8Jssnvjk+n00CpDmOuOQSz
BNNgVh4ajrblBKW5/2VOM8+fRuOwYpDzac3OgLyq97p+daiAtJDjI74NKR1v
/3kyPT8dy6Pp7GQsj09enP4rrkBKpM+z6Vie4P8X0/5DyCJE8GiGvdNpT5MT
A+0Zjfq1IcRp7Y55jkpaxi96ufmjyWlpvshPs8UsTY7SU52cnBzNEjVNz5LF
6eLly/OX6nSazyK5cK4K7OwFYfKP4ZInlcBfGFQFYY6PjodfBrzHl4/jL7F8
nB0tpidnWaJOUrCs1Cw5O9anyex0dj59eZwfnefZ11n+/mmWORM+xfL0fDY9
Pj95mulL8ivOzqpRNNTeSsE/ewtxzhhaY4RYpv2cJKhl6ZxhNwuDbNWYSR9P
NK7kZYfBP5/ST6T2hd34etgWNBe3gFdDQf7nU4f79yUU9ETpgXujOlRVaJyv
WIR4h7RYyavGdxUteMPdw6efTf/5TqPKUfd/ST1EHgcS6B4v4wCCpgWkbv0R
4MEQdqUuDq0AzSVoOMmDt88a34m8VsgjVEUEOlfrqAp0KHKE/bkNGmZuSvcW
rZqmsT1TVG0LCBKmkgG7q9ij7c/K+sSOtgo1p2eWUjOUSBg1JuCaWrk4BUFD
VOokBcFcUNfiQ4XC2wnPei/eX3ymDmq0r7lxozSJfpPyffiKTvvm1c0vZs7Q
1tF4pksHpd0NqBA4E1yC6Erj8VGEETQBMbZz9lDbdanzZZh0UHuvuCxaKa/N
g5YXVQfoo+uxfO3Mg/zOlDnQ+F86mpLIPyFvW3pNiriligd++p9gRUBZhrxo
uaSxSl+aF9AncTCBn7Fir5V7oIED2ahQPIKSKcK2cXEOEq+xyIQQxQNkelNu
WK+XNPjrZ1x3lM3x/En/Drm+I9eKc2KAiSetvRvx8vQLDklOqcDvmpyrXrJe
HrRuBAEFFGLubi96attGbEsQDplCcqDT6DA4IzQI3NESy6HUl5uE+jIEIddz
3wFEo7zHcjUClUyRj5s2GL3QZYPaVS6S3KALWu1ml+lmd7H0vFfE/mjC9zAb
zuEJX1EDM5EDpDCWG9vF0FI5qLeIUTC3m3USvOLu+BC7dq+h39D47QOdgFAW
sGQ+mKrK7Twyxgst2kHJPRvtJYEvC1bBMTlOPQ2CSeOSLxJrIl+ahWZMf6An
ywmlz9EvII/RM8mXRbDZcGy6uwYp7BqGDdh2w50JqSsjinwDsoNlkgwExLyg
+QepCXxkRe+0aFkIKtH0/NWrm7uE3tsFCO61SZD5EsLZal+1PPEhS3ie/8k4
RWL0S2FEmJt8ja6LC2awpPuF1pI14wRtly0RZDxHQE5zXcaTTwox/N5Vg7ja
v2cfpPXKLIuWk/GTMzG+YFPD+5G12tAhNMcKqh4MPD+5/DA8by0NBfhoy/tv
Io5fOFt9nse3m/vxZPQNbO0zOvCBoWH+xlIuoklR7y9i6y8R7j9JmlWPQGII
TDeKKliWLu/K7c3HCU8dL0gEbOxKuqyPOrMd6YyhR/ScLyjgIBwkBjSfDXxs
61Om7Wd8NJLbhIGlCvfEB+vCILWsyRME1/g1Vd9Uy+1oDny+Q+an9zxVYDaR
0vheX7swaz6ZnsgDWA1JA/WBhxuxuYGZeK1DHMHxU2qqRIxCeFaz+Yo2SR4Y
qL8mM5xEuyZpbZJzr8rwIwYSYurCP+Ccv3WxwHBJ/a7Y8ASUHPEABRr5K44J
9g4NGeXZH/pbvJjtFUrW7kaSr/YGaGS4FUDibX+JFm5K43tRqJWWy/CPQPhG
A9WHutkKWg1VulFIqllXKr4PSxiIhGFtydABOJSHnguxMFwYyY62pyl9pmtq
p7En0P0p0o23WduCMNlqJLfa179qhxNpvhKD8jkhZ3QdSQSgDIP+NdPQzFV/
8xWb+Cr4DuXpMCAmNEOMEjCnWym6PouRBDvazFDhE41tw91q6MFpouHlQWoZ
3oVEF6/0dlcxqGSm5Zts55+F8hSudB604OvHfUHDnVAcjexf2MV/K7F3QtSG
ACTUVRMCkO8QwxSe7kMb2NbRDWHUVmNRVSDrRPwX2GZxLHwkAAA=

-->

</rfc>

