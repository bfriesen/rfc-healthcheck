<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "./Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Healtch Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>street</street>
          <city>city</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “health check response” format for API HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/">https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Vast majority of modern APIs, that drive data to web and mobile applications use
HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these APIs
determine availability of the applications themselves. In distributed systems
built with a number of APIs, understanding the health status of the APIs and
making corresponding decisions, for failover or circuit-breaking, are essential
for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a single mandatory root field and several optional
fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used.  <vspace blankLines='1'/>
In case of “warn” status, additional information SHOULD be provided, utilizing
optional fields of the response.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
  <t>memory: (optional) array of sizes for the  currently utilized resident memory
(in kilobytes) on each of the logical nodes backing the service. Logical node
can be a physical server, VM, a container or any other logical unit that makes
sense for service publisher.</t>
  <t>cpu: (optional) array of cpu utiliation percentage on each of the logical
nodes backing the service. Logical node can be a physical server, VM, a
container or any other logical unit that makes sense for service publisher.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional information
regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "serviceID": "service:authz",
    "description": "health of authz service",
    "status": "pass",
    "memory": [4096, 1024, 3456],
    "cpu": [20, 40, 50],
    "uptime": "1209600",
    "notes": [""],
    "output": "",
    "details": [
      {
        "id": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "name": "sub-component-X",
        "status": "pass",
        "value": "12313",
        "output": ""
      },
      {
        "id": "3c1f048c-a4be-4aa2-83e6-2629073d19dc",
        "name": "sub-component-Y",
        "status": "warn",
        "value": "0920394",
        "output": "Close to capacity"
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="another-subtitle" title="Another subtitle">

<t>Lorem Ipsum</t>

</section>
<section anchor="final-subtitle" title="Final subtitle">

<t>Lorem ipsum</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json will be submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5226" target='https://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-not-use-insert-other-health-check-format" title="Why not use (insert other health check format)?">

<t>There are a fair number of existing health check formats. However, these formats
have generally been optimised for particular use-cases, and less capable of
fitting into general scenarios, optimized for interoperability.</t>

</section>
<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Implementing them would add considerable complexity and the associated
potential for errors (both in the specification and by its users). For the sake
of interoperability and ease of implementation this specification doesn’t
attempt to create the most powerful format possible.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
OFcFdvaCMPnHcMmTSuAvDKqCMMdHx8MvA97jy8fxl1g+zo6K6clZlqiTFCwr
NUvOjvVpMjudnU9fHudH53n2dZb/+TTLnAmfYnl6Ppsen588zfQl+RVnZ9Uo
GmVvpeDfvYU4ZwytMUIs035OEtSydM6wm4VBtmrMpI8nGlfyssPgn0/pJ1L7
wm58PWyXNBe3gFdDQf7nU4f79yUU9ETpgXujOlRVaJyvVoR4h7RYyavGdxUt
eMPdw6efTf/5TqPKUfd/ST1EHgcS6B4v4wCCpgWkbv0R4MEQdqUuDq0AzSVo
OMmDt88a34m8VsgjVEUEOlfrqAp0KHKE/bkNGmZuSvcWrZqmsT1TVG0LCBKm
kgG7q9ij7c/K+sSOtgo1p2eWUjOUSBg1JuCaWrk4BUFDVOokBcFcUNfiQ4XC
2wnPei/eX3ymDmq0r7lxozSJfpPyffiKTvvm1c0vZs7Q1tF4pksHpd0NqBA4
E1yC6Erj8VGEETQBMbZz9lDbdanzRZh0UHuvuCxaKa/Ng5YXVQfoo+uxfO3M
g/zOlDnQ+F86mpLIPyFvW3pNiriligd++t9gRUBZhrxosaCxSl+aC+iTOJjA
z1ix18o90MCBbLRUPIKSKcK2cXEOEq+vyIQQxQNkelNuWK+XNPjrZ1x3lM3x
/En/Drm+I9eKc2KAiSetvRvx8vQLDklOqcDvmpyrXrBeHrRuBAEFFGLubi96
attGbEsQDplCcqDT6DA4IzQI3NESy6HUl5uE+jIEIddz3wFEo7zHcjUClUyR
j5s2GH2pywa1qyyS3KALWu1ml+lmd7H0vFfE/mjC9zAbzuEJX1EDM5EDpDCW
G9vF0FI5qLeIUTC3m3USvOLu+BC7dq+h39D47QOdgFAKWDIfTFXldh4Z44UW
7aDkno32ksCXBavgmBynngbBpHHJF4k1kS9NoRnTH+jJYkLpc/QLyGP0TPJl
EWw2HJvurkGWdg3DBmy74c6E1JURRb4B2cEySQYCYi5o/kFqAh/ZsndatCwE
lWh6/urVzV1C720BgnttEmS+hHC22lctT3zIEp7nfzJOkRj9UhgR5iZfo2vi
JTNY0v1Ca8macYK2y5YIMp4jIKe5LuPJJ4UY/u6qQVzt368P0nplFsuWk/GT
MzG+YFPD+5G12tAhNMcKqh4MPD+5/DA8by0NBfhoy/tvIo4vnK0+z+Pbzf14
MvoGtvYZHfjA0DB/YykX0aSo9xex9ZcI958kzapHIDEEphtFFSxLl3fl9ubj
hKeOFyQCNnYlXdJHndmOdMbQI3rOFxRwEA4SA5rPBj629SnT9jM+GsltwsBS
hXvig/XSILWsyRME1/g1Vd9Uy+1oDny+Q+an9zxVYDaR0vheX7swaz6ZnsgD
WA1JA/WBhxuxuYGZeK1DHMHxU2qqRIxCeFaz+Yo2SR4YqL8mM5xEuyZpbZJz
r8rwIwYSYurCP+Ccv3WxwHBJ/W654QkoOeIBCjTyVxwT7B0aMsqzP/S3eDHb
K5Ss3Y0kX+0N0MhwK4DE2/4SLdyUxvdiqVZaLsL//ME3Gqg+1M1W0Gqo0o1C
Us26UvF9WMJAJAxrS4YOwKE89CxEYbgwkh1tT1P6TNfUTmNPoPtTpBtvs7YF
YbLVSG61r3/VDifSfCUG5XNCzug6kghAGQb9a6ahmav+5is28VXwHcrTYUBM
aIYYJWBOt1J0fRYjCXa0maHCJxrbhrvV0IPTRMPLg9QyvAuJLl7p7a5iUMlM
yzfZzj8L5Slc6TxowdeP+4KGO6E4Gtm/sIv/r8TeCVEbApBQV00IQL5DDFN4
ug9tYFtHN4RRW41FVYGsE/Ffy498E3QkAAA=

-->

</rfc>

