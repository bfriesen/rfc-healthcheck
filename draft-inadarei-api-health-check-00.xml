<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Healtch Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>114 5th Avenue</street>
          <city>New York</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “health check response” format for API HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="strong">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/">https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Vast majority of modern APIs, that drive data to web and mobile applications use
HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these APIs
determine availability of the applications themselves. In distributed systems
built with a number of APIs, understanding the health status of the APIs and
making corresponding decisions, for failover or circuit-breaking, are essential
for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a single mandatory root field and several optional
fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used.  <vspace blankLines='1'/>
In case of “warn” status, additional information SHOULD be provided, utilizing
optional fields of the response.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
  <t>memory: (optional) array of sizes for the  currently utilized resident memory
(in kilobytes) on each of the logical nodes backing the service. Logical node
can be a physical server, VM, a container or any other logical unit that makes
sense for service publisher.</t>
  <t>cpu: (optional) array of cpu utiliation percentage on each of the logical
nodes backing the service. Logical node can be a physical server, VM, a
container or any other logical unit that makes sense for service publisher.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>connections: (optional) current number of active connections</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional information
regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "serviceID": "service:authz",
    "description": "health of authz service",
    "status": "pass",
    "memory": [4096, 1024, 3456],
    "cpu": [20, 40, 50],
    "uptime": "1209600",
    "connections" : 25,
    "notes": [""],
    "output": "",
    "details": [
      {
        "id": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "name": "sub-component-X",
        "value": "12313",
        "status": "pass",
        "output": ""
      },
      {
        "id": "3c1f048c-a4be-4aa2-83e6-2629073d19dc",
        "name": "Cassandra test query duration in ms",
        "value": "250",
        "status": "warn",
        "output": "Response time over target of less than 100ms"
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="another-subtitle" title="Another subtitle">

<t>TODO</t>

</section>
<section anchor="final-subtitle" title="Final subtitle">

<t>TODO</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json is being submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

