<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "./Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-healthcheck-00" category="info">

  <front>
    <title>Healtch Check Response for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <email>inadarei@users.noreply.github.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “health check response” format for API HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/">https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Vast majority of modern APIs, that drive data to web and mobile applications use
HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these APIs
determine availability of the applications themselves. In distributed systems
built with a number of APIs, understanding the health status of the APIs and
making corresponding decisions, for failover or circuit-breaking, are essential
for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a root object with:</t>

<t><list style="symbols">
  <t>lorem</t>
  <t>ipsum.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET / HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "foo" : "bar"
  }
]]></artwork></figure>

</section>
<section anchor="another-subtitle" title="Another subtitle">

<t>Lorem Ipsum</t>

</section>
<section anchor="final-subtitle" title="Final subtitle">

<t>Lorem ipsum</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json</t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5226" target='https://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as _health because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-not-use-insert-other-health-check-format" title="Why not use (insert other health check format)?">

<t>There are a fair number of existing health check formats. However, these formats
have generally been optimised for particular use-cases, and less capable of
fitting into general scenarios, optimized for interoperability.</t>

</section>
<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Implementing them would add considerable complexity and the associated
potential for errors (both in the specification and by its users). For the sake
of interoperability and ease of implementation this specification doesn’t
attempt to create the most powerful format possible.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
H36z30dDGQAA

-->

</rfc>

