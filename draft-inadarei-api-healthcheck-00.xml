<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "./Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-healthcheck-00" category="info">

  <front>
    <title>Healtch Check Response for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <email>inadarei@users.noreply.github.com</email>
        <uri>http://www.freshblurbs.com/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “health check response” format for API HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/">https://datatracker.ietf.org/doc/draft-inadarei-api-healthcheck/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Vast majority of modern APIs, that drive data to web and mobile applications use
HTTP <xref target="RFC7230"/> as a transport protocol. The health and uptime of these APIs
determine availability of the applications themselves. In distributed systems
built with a number of APIs, understanding the health status of the APIs and
making corresponding decisions, for failover or circuit-breaking, are essential
for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific rformats creates significant
challenges, disallowing any meaningful interoprerability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC7159"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-health-response" title="API Health Response">

<t>An API Health Response Format (or, interchangeably, “health check response”)
uses the format described in <xref target="RFC7159"/> and has the media type
“application/vnd.health+json”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a single mandatory root field and several optional
fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
For “pass” and “warn” statuses HTTP response code in the 2xx - 3xx range MUST
be used. for “fail” status HTTP response code in the 4xx - 5xx range MUST be
used.  <vspace blankLines='1'/>
In case of “warn” status, additional information SHOULD be provided, utilizing
optional fields of the response.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
  <t>memory: (optional) array of sizes for the  currently utilized resident memory
(in kilobytes) on each of the logical nodes backing the service. Logical node
can be a physical server, VM, a container or any other logical unit that makes
sense for service publisher.</t>
  <t>cpu: (optional) array of cpu utiliation percentage on each of the logical
nodes backing the service. Logical node can be a physical server, VM, a
container or any other logical unit that makes sense for service publisher.</t>
  <t>uptime: (optional) current uptime in seconds since the last restart</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an array of objects optionally providing additional information
regarding the various sub-components of the service.</t>
  <t>links: (optional) an array of objects containing link relations and URIs 
<xref target="RFC3986"/> for external links that MAY contain more information about the 
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

  {
    "serviceID": "service:authz",
    "description": "health of authz service",
    "status": "pass",
    "memory": [4096, 1024, 3456],
    "cpu": [20, 40, 50],
    "uptime": "1209600",
    "notes": [""],
    "output": "",
    "details": [
      {
        "id": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "name": "sub-component-X",
        "status": "pass",
        "value": "12313",
        "output": ""
      },
      {
        "id": "3c1f048c-a4be-4aa2-83e6-2629073d19dc",
        "name": "sub-component-Y",
        "status": "warn",
        "value": "0920394",
        "output": "Close to capacity"
      }
    ],
    "links": [
      {"rel": "about", "uri": "http://api.example.com/about/authz"},
      {
        "rel": "http://api.example.com/rel/thresholds",
        "uri": "http://api.example.com/about/authz/thresholds"
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="another-subtitle" title="Another subtitle">

<t>Lorem Ipsum</t>

</section>
<section anchor="final-subtitle" title="Final subtitle">

<t>Lorem ipsum</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json will be submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5226" target='https://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-not-use-insert-other-health-check-format" title="Why not use (insert other health check format)?">

<t>There are a fair number of existing health check formats. However, these formats
have generally been optimised for particular use-cases, and less capable of
fitting into general scenarios, optimized for interoperability.</t>

</section>
<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Implementing them would add considerable complexity and the associated
potential for errors (both in the specification and by its users). For the sake
of interoperability and ease of implementation this specification doesn’t
attempt to create the most powerful format possible.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
4i9SJAAA

-->

</rfc>

